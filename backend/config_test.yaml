environment: test # Will be overridden by ENV

server:
  port: 8080

database:
  host: "localhost"
  dbname: "pavilion_test"  # Test database
  port: 26257
  user: "root"
  password: ""  # Will be overridden by DB_PASSWORD
  sslmode: "disable"
  timezone: "UTC"
  pool:
    maxIdleConns: 10
    maxOpenConns: 100
    connMaxLifetime: 1h

scylladb:
  hosts: 
    - "localhost"
  port: 9042
  keyspace: "pavilion_db"
  username: "root"
  password: ""
  consistency: "one"  # Changed from "quorum" to "one" for development environment
  replication:
    class: "SimpleStrategy"
    replicationFactor: 3
  timeout: "5s"
  connectTimeout: "10s"

redis:
  addr: "localhost:6379"
  password: ""
  db: 0

ipfs:
  host: "localhost:5001"
  gateway_url: "https://ipfs.io/ipfs/"

logging:
  level: debug  # Changed from info to debug for more detailed logs
  format: json  # Will be overridden by LOG_FORMAT
  output: both  # Changed from stdout to both to output to both stdout and file
  file:
    enabled: true  # Changed from false to true to enable file logging
    path: ./logs/app.log  # Changed to use a specific log file path
    rotate: true  # Will be overridden by LOG_FILE_ROTATE
    maxSize: 100MB  # Will be overridden by LOG_FILE_MAX_SIZE
    maxAge: 7d  # Will be overridden by LOG_FILE_MAX_AGE
  sampling:
    initial: 100  # Will be overridden by LOG_SAMPLING_INITIAL
    thereafter: 100  # Will be overridden by LOG_SAMPLING_THEREAFTER

ffmpeg:
  path: "/opt/homebrew/bin/ffmpeg"
  probePath: "/opt/homebrew/bin/ffprobe"
  videoCodec: "libx264"
  audioCodec: "copy"
  preset: "fast"
  hlsTime: 10
  hlsPlaylistType: "vod"
  outputPath: "/tmp/videos"
  resolutions:
    - "720p"
    - "480p"
    - "360p"

# ... other configurations ...

storage:
  uploadDir: "uploads"
  tempDir: "temp"
  ipfs:
    apiAddress: "/ip4/127.0.0.1/tcp/5001"
    gateway: "http://localhost:8080"
  s3:
    bucket: "octopus-doganbros-storage"
    region: "eu-central-1"
    accessKeyId: ""  # Will be overridden by S3_ACCESS_KEY_ID
    secretAccessKey: ""  # Will be overridden by S3_SECRET_ACCESS_KEY
    useSSL: true
    root_directory: "videos_test"  # Use a separate directory for test files
    directories:
      videoPost: "video-posts/"
      meetingRecording: "meeting-recordings/"
      chatAttachments: "chat-attachments/"
      profilePhoto: "profile-photos/"

video:
  maxSize: 104857600  # 100MB in bytes
  minTitleLength: 3
  maxTitleLength: 100
  maxDescLength: 500
  allowedFormats:
    - ".mp4"
    - ".mov"
    - ".avi"
    - ".webm"

auth:
  jwt:
    secret: test-secret-key  # Will be overridden by JWT_SECRET
    accessTokenTTL: 168h
    refreshTokenTTL: 168h 

pulsar:
  url: "pulsar://localhost:6650"
  web_service_url: "http://localhost:8083"
  tls_enabled: false
  tls_cert_path: ""
  operation_timeout: "30s"
  connection_timeout: "30s"
  namespace: "pavilion/notifications"
  auth_token: ""  # Will be overridden by PULSAR_AUTH_TOKEN

notification:
  enabled: true
  video_events_topic: "persistent://pavilion/notifications/video-events"
  comment_events_topic: "persistent://pavilion/notifications/comment-events"
  user_events_topic: "persistent://pavilion/notifications/user-events"
  dead_letter_topic: "persistent://pavilion/notifications/dead-letter"
  retry_queue_topic: "persistent://pavilion/notifications/retry-queue"
  retention_time_hours: 48
  deduplication_enabled: true
  deduplication_window: "2h"
  retry_enabled: true
  max_retries: 5
  backoff_initial: "1s"
  backoff_max: "60s"
  backoff_multiplier: 2.0