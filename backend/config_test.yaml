environment: "test"  # Testing environment

server:
  port: 8080


database:
  host: "localhost"
  dbname: "pavilion_test"
  port: 26257
  user: "root"
  password: ${DB_PASSWORD:-}
  sslmode: "disable"
  timezone: "UTC"
  pool:
    maxOpen: 100
    maxIdle: 10
    connMaxLifetime: 1h  # Duration string format: "1h" for 1 hour, "30m" for 30 minutes, etc.

redis:
  addr: "localhost:6379"
  password: ""
  db: 0

ipfs:
  host: "localhost"
  gateway_url: "https://ipfs.io/ipfs/"

logging:
  level: ${LOG_LEVEL:-error}  # Default to error level for tests to reduce noise
  format: ${LOG_FORMAT:-console}  # Default to console for better test output readability
  output: stdout  # Always use stdout for tests
  file:
    enabled: false  # Never use file logging in tests
    path: "/var/log/pavilion"
    rotate: false
    maxSize: "100MB"
    maxAge: "7d"
  development: true  # Always true for test environment
  sampling:
    initial: 100  # No sampling in tests
    thereafter: 100

ffmpeg:
  path: "/usr/local/bin/ffmpeg"
  probePath: "/usr/local/bin/ffprobe"
  videoCodec: "libx264"
  audioCodec: "copy"
  preset: "fast"
  hlsTime: 10
  hlsPlaylistType: "vod"

# ... other configurations ...

storage:
  uploadDir: "uploads"
  tempDir: "temp"
  ipfs:
    apiAddress: "/ip4/127.0.0.1/tcp/5001"
    gateway: "http://localhost:8080"
  s3:
    endpoint: "s3.amazonaws.com"
    bucket: "octopus-doganbros-storage"
    region: "eu-central-1"
    accessKeyId: ""
    secretAccessKey: ""
    useSSL: true
    directories:
      videoPost: "video-posts/"
      meetingRecording: "meeting-recordings/"
      chatAttachments: "chat-attachments/"
      profilePhoto: "profile-photos/"

video:
  maxSize: 104857600  # 100MB in bytes
  minTitleLength: 3
  maxTitleLength: 100
  maxDescLength: 500
  allowedFormats:
    - ".mp4"
    - ".mov"
    - ".avi"
    - ".webm"

auth:
  jwt:
    secret: "test-secret-key"
    accessTokenTTL: 15m
    refreshTokenTTL: 168h  # 7 days 