name: Deploy App

on:
  push:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: [self-hosted]
    outputs:
      build-dir: ${{ steps.export-build-path.outputs.build-dir }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Copy frontend .env file
        run: |
          cp ~/consensus-runner/_work/env-files/frontend.env ./frontend/.env

      - name: Install dependencies
        working-directory: ./frontend
        run: yarn install

      - name: Build frontend
        working-directory: ./frontend
        run: yarn build

      - name: Export build path
        id: export-build-path
        working-directory: ./frontend
        run: echo "build-dir=$(pwd)/build" >> $GITHUB_OUTPUT

  deploy-frontend:
    runs-on: [self-hosted, linode, pavilion]
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace build folder
        working-directory: ./frontend
        run: |
          sudo rm -rf /var/www/pavilion/build
          sudo cp -r ./build /var/www/pavilion/

  deploy-backend:
    runs-on: [self-hosted, linode, pavilion]
    needs: deploy-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Copy backend .env file
        run: |
          cp ~/consensus-runner/_work/env-files/backend.env ./backend/.env

      - name: Install dependencies
        working-directory: ./backend
        run: yarn install

      - name: Stop and delete existing backend PM2 process (if any)
        run: |
          pm2 delete pavilion-network || echo "No existing process to stop"

      - name: Start backend server with PM2
        run: |
          pm2 start yarn --name "pavilion-network" -- start

      - name: Save PM2 process list
        run: |
          pm2 save

      - name: Verify the backend server is running
        run: |
          curl --silent --fail http://localhost:8000 || exit 1

      - name: Reload Nginx
        run: |
          sudo nginx -t && sudo systemctl reload nginx
